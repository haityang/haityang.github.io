1.[wafer2-startup](https://github.com/tencentyun/wafer2-startup/wiki/%E8%87%AA%E8%A1%8C%E9%83%A8%E7%BD%B2)
----
自行部署适用于想将腾讯云 Wafer SDK 和 Demo 部署在自己的服务器，首先需要申请ECS服务器，域名，SSL证书。

```

git:
https://github.com/tencentyun/wafer2-startup.git

```


2.[比较好的一篇布署文章](https://www.jianshu.com/p/408ae000fe1f?utm_campaign=hugo&utm_medium=reader_share&utm_content=note&utm_source=weixin-friends)
----

1.布置服务器ECS

	a).ngix
		* yum -y install nginx
		* nginx -v

	b).Node.js
		* curl --silent --location https://rpm.nodesource.com/setup_8.x | sudo bash -
		* yum -y install nodejs
		* node -v

	c).MySql
		* wget http://dev.mysql.com/get/mysql57-community-release-el7-8.noarch.rpm
		* yum localinstall mysql57-community-release-el7-8.noarch.rpm
		* yum repolist enabled | grep "mysql.*-community.*"
		* yum install mysql-community-server
		* systemctl start mysqld
		* systemctl status mysqld
		* mysql -u root -p
		* ALTER USER 'root'@'localhost' IDENTIFIED BY '新密码';		
		//创建一验证数据库
		* CREATE DATABASE IF NOT EXISTS cAuth DEFAULT CHARSET utf8mb4 COLLATE utf8mb4_unicode_ci;


2.需申请ssl证书

		* 申请阿里ssl证书。
		* 把证书传到以下目录  /data/release/nginx
		

4.配置https:

	1). 新建weapp.conf到/etc/nginx/conf.d/
	2). nginx -t
	3). nginx -s reload

	```

		upstream app_weapp {
	    server localhost:5757;
	    keepalive 8;
	}
	 
	server {
	    listen      80;
	    server_name www.domain.com;//你的域名
	 
	    rewrite ^(.*)$ https://$server_name$1 permanent;
	}
 
	server {
	    listen      443;
	    server_name  www.domain.com;//你的域名
	 
	    ssl on;
	 
	    ssl_certificate           /data/release/nginx/yourssl.pem;//你的ssl证书文件名,可自行修改文件名
	    ssl_certificate_key       /data/release/nginx/yourssl.key;
	    ssl_session_timeout       5m;
	    ssl_protocols             TLSv1 TLSv1.1 TLSv1.2;
	    ssl_ciphers               ECDHE-RSA-AES256-GCM-SHA384:ECDHE-RSA-AES128-GCM-SHA256:DHE-RSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-SHA384:ECDHE-RSA-AES128-SHA256:ECDHE-RSA-AES256-SHA:ECDHE-RSA-AES128-SHA:DHE-RSA-AES256-SHA:DHE-RSA-AES128-SHA;
	    ssl_session_cache         shared:SSL:50m;
	    ssl_prefer_server_ciphers on;
	 
	    location / {
	        proxy_pass http://app_weapp;
	        proxy_http_version 1.1;
	        proxy_set_header Upgrade $http_upgrade;
	        proxy_set_header Connection 'upgrade';
	        proxy_set_header Host $host;
	        proxy_cache_bypass $http_upgrade;
	    }
	}

	```

5.配置小程序：

	1). 注册小程序，获得appid, appkey.
	2). 配置业务服务器weapp. 
		a). 将Warfer2-startup中的server文件夹重命名到/data/release/weapp下
		b). 配置config.js文件

		```
		const CONF = {
    		port: '5757',
    		rootPathname: '',

    		// 微信小程序 App ID
    		appId: '',

    		// 微信小程序 App Secret
    		appSecret: '',

    		// 是否使用腾讯云代理登录小程序
    		useQcloudLogin: true,

    		/**
     		* MySQL 配置，用来存储 session 和用户信息
     		* 若使用了腾讯云微信小程序解决方案
     		* 开发环境下，MySQL 的初始密码为您的微信小程序 appid
     		*/
    		mysql: {
        		host: 'localhost',
        		port: 3306,
        		user: 'root',
        		db: 'cAuth',
        		pass: 'wxb366c43b3a096ade',
        		char: 'utf8mb4'
    		},

		    cos: {
		        /**
		         * 区域
		         * @查看 https://cloud.tencent.com/document/product/436/6224
		         */
		        region: 'ap-guangzhou',
		        // Bucket 名称
		        fileBucket: 'wximg',
		        // 文件夹
		        uploadFolder: ''
		    },
		
		    // 微信登录态有效期
		    wxLoginExpires: 7200,
		    serverHost: '',
    		tunnelServerUrl: '',
    		tunnelSignatureKey: '',
    		qcloudAppId: '',
    		qcloudSecretId: '',
    		qcloudSecretKey: '',
    		wxMessageToken: 'weixinmsgtoken',
    		networkTimeout: 30000		}
		
		module.exports = process.env.NODE_ENV === 'local' ? Object.assign({}, CONF, require('./config.local')) : CONF;


		```

       c). 安装weapp中的依赖
		       
		```
		* npm config set registry https://registry.npm.taobao.org
		* npm i pm2 nodemon -g
		* npm i
		* node tools/initdb.js
		* npm run dev
		* npm start
		* 
		
		```
		
		
6.配置本地server环境：


    1). 安装npm
        brew install npm
        
    2). 替换及重置brew源
    
    ```
    * 替换brew.git: 中科大源
	cd "$(brew --repo)"
	git remote set-url origin https://mirrors.ustc.edu.cn/brew.git

	* 替换homebrew-core.git:
	cd "$(brew --repo)/Library/Taps/homebrew/homebrew-core"
	git remote set-url origin https://mirrors.ustc.edu.cn/homebrew-core.git
	
	* echo 'export HOMEBREW_BOTTLE_DOMAIN=https://mirrors.ustc.edu.cn/homebrew-bottles' >> ~/.bash_profile
	source ~/.bash_profile
	
	* 清华源
	*重置brew.git:
	cd "$(brew --repo)"
	git remote set-url origin https://github.com/Homebrew/brew.git

	重置homebrew-core.git:
	cd "$(brew --repo)/Library/Taps/homebrew/homebrew-core"
	git remote set-url origin https://github.com/Homebrew/homebrew-core.git
	
    
    ```
    
    3). 安装mysql：
    初始化数据库：npm run initdb
    
    
7.运行服务：

    1). node app.js 
    

8 . 使用Chrome调试 Node

	1).npm install -g cnpm
	2).cnpm install -g node-inspector
	3).node --inspect app.js
	4).打开chrome的开发模式，点击node图示。
	5).打开浏览器窗口，访问localhost:5757/user

    
   
    
    
    
    