
* #### crash log 设备中存放地址：

```
/var/mobile/Library/Logs/CrashReporter/InterfaithExplorer_2010-11-22-140841_ianvinkipad.plist 

```


* 设备中可以看到:

Settings -> General -> About -> Diagnostics & Usage
把崩溃日志拷贝成.crash后导入organizer,即可符号化



* 用itune同步后，在mac中可以看到

~/Library/Logs/CrashReporter/MobileDevice/



* 符号化

```
Crash reports with stack traces need to be symbolicated before they can be analyzed. 
Symoblication replaces memory addresses with human-readable function names and line numbers. 
If you get crash logs off a device through Xcode's Organizer window, then they will be symbolicated for you automatically after a few seconds. 
Otherwise you will need to symbolicate the .crash file yourself by importing it to the Xcode Organizer.
 See Symbolication for details
 
```
 
 
* Put your release build and your .dSYM file in the same directory and open terminal
 
```
$cd directory
$lldb MyApp.app
(lldb) image lookup -v --address 0x00085f3c

```



* 利用atos工具

```
atos -o Debug-iphoneos/demo.app.dSYM/Contents/Resources/DWARF/demo -l 0x103c40000 0x00000001041c1fb8

```



* crash log 符号化

```
find . -name symbolicatecrash  //在Xcode目录里找
dwarfdump --uuid demo.app.dSYM
dwarfdump --uuid demo.app	/携程旅行
export DEVELOPER_DIR="/Applications/Xcode.app/Contents/Developer" //export DEVELOPER_DIR=`xcode-select --print-path`
/Applications/Xcode.app/Contents/SharedFrameworks/DVTFoundation.framework/Versions/A/Resources/symbolicatecrash -v a.crash demo.app.dSYM/ 2 > a.log

```


* 删除crash log:

Not saving crash log because we have reached the limit for logs to store on disk. 
Sync or otherwise clear logs from /var/mobile/Library/Logs/CrashReporter to save new log

Disconnect your device and close Xcode.
On your dev machine you should look in:
/Users/%username%/Library/Logs/CrashReporter/MobileDevice/%devicename%
Move all reports to the Trash and then sync your device with iTunes. That should remove the logs from the device.


* Main Thread Checker: UI API called on a background thread

```

It's hard to find the UI code which is not executed in main thread sometimes. You can use the trick below to locate it and fix it.

1. Choose Edit Scheme -> Diagnostics, tick Main Thread Checker and Pause on issues. enter image description here
2. Run your iOS application to reproduce this issue. (Xcode should pause on the first issue.) enter image description here
3. Wrap the code that modify the UI in DispatchQueue.main.async {}

```


* NaN的bug

```
[Unknown process name] Error: this application, or a library it uses, has passed an invalid numeric value (NaN, or not-a-number) to CoreGraphics API and this value is being ignored. Please fix this problem.
[Unknown process name] If you want to see the backtrace, please set CG_NUMERICS_SHOW_BACKTRACE environmental variable.

可以在菜单: Product -> Scheme -> Edit Scheme.  "Run" 选项里, 找到 "Arguments" , 然后在 "Environmental Variables" 一行, 添加CG_CONTEXT_SHOW_BACKTRACE （或 CG_NUMERICS_SHOW_BACKTRACE等 ， 看你运行时候的提示而定 ）并且把数值设置为 YES.

```